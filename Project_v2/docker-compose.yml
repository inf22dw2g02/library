version: '3'
services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    ports:
      - '3306:3306'
    environment:
      MYSQL_PASSWORD: password
    volumes:
      - project_v2DB-mysql-data:/var/lib/mysql
    networks:
      project_v2DB-network:
        aliases:
          - mydbhost
         

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - '8080:8080'
    depends_on:
      - db
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_DB: project_v2DB
      GOOGLE_CLIENT_ID: '89846874244-sr5mqqd452sdele5eroh90m8l1d49d6k.apps.googleusercontent.com'
      GOOGLE_CLIENT_SECRET: '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'
    networks:
      project_v2DB-network:
        aliases:
          - mydockerhost
    
    volumes:
      - .:/app

    #Executar migrations
    command: sh -c 'if [ ! -f /app/.migration_executed ]; 
             then echo "Create and Running database migration..."; 
             sleep 10; 
             npx sequelize-cli db:create; 
             npx sequelize-cli db:migrate; 
             npx sequelize-cli db:seed:all;
             touch /app/.migration_executed; 
             fi && sleep 10 && npm start'

  react-app:
    build:
      context: ../react_app/client/
      dockerfile: dockerfile.react
    ports:
      - 3000:3000
    networks:
      project_v2DB-network:
        aliases:
          - myreacthost
    depends_on:
      - api
    

volumes:
  project_v2DB-mysql-data:

networks:
  project_v2DB-network:
    driver: "bridge"
    ipam:
      driver: default
      
